# Generated by Django 4.1.5 on 2023-01-26 13:22

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='about_us')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Billing_Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configured_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('admin_commission', models.FloatField(default=1)),
                ('pv_percent', models.FloatField(default=1)),
            ],
            options={
                'db_table': 'Billing_Config',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='blog')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='CarFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.PositiveIntegerField(default=100000)),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'CarFund',
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_balance', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'Commission',
            },
        ),
        migrations.CreateModel(
            name='Current_PV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Current PV',
            },
        ),
        migrations.CreateModel(
            name='DeliveryCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
            ],
            options={
                'db_table': 'DeliveryCharge',
            },
        ),
        migrations.CreateModel(
            name='DirectorshipFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.PositiveIntegerField(default=100000)),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'DirectorshipFund',
            },
        ),
        migrations.CreateModel(
            name='DirectReferalCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'DirectReferalCommission',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to='gallery')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='HomeBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('sub_title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=150)),
                ('link', models.CharField(default='NONE', max_length=500)),
                ('image', models.FileField(upload_to='banners')),
            ],
            options={
                'db_table': 'HomeBanner',
            },
        ),
        migrations.CreateModel(
            name='HomeFooterBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.FileField(upload_to='banners')),
            ],
            options={
                'db_table': 'HomeFooterBanner',
            },
        ),
        migrations.CreateModel(
            name='HouseFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.PositiveIntegerField(default=100000)),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'HouseFund',
            },
        ),
        migrations.CreateModel(
            name='Level_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configured_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('levels', models.PositiveIntegerField()),
                ('groups', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Level_Settings',
            },
        ),
        migrations.CreateModel(
            name='Level_Settings_Level_Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configured_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('levels', models.PositiveIntegerField()),
                ('groups', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Monthly_PV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Monthly PV',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tax', models.FloatField(default=5.0)),
                ('commission', models.FloatField(default=10.0)),
                ('image', models.FileField(default='products_images/banner_2_product.png', upload_to='categories')),
            ],
            options={
                'db_table': 'ProductCategory',
            },
        ),
        migrations.CreateModel(
            name='ProductSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.FileField(default='products_images/banner_2_product.png', upload_to='categories')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.productcategory')),
            ],
            options={
                'db_table': 'ProductSubCategory',
            },
        ),
        migrations.CreateModel(
            name='PVConversionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversion_value', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'PVConversionValue',
            },
        ),
        migrations.CreateModel(
            name='PVPairValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pair_value', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'PVPairValue',
            },
        ),
        migrations.CreateModel(
            name='Savings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savings', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'savings',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('one_month_subscription_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('three_month_subscription_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('six_month_subscription_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('twelve_month_subscription_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('pv_percentage', models.FloatField(default=10.0)),
                ('vendor_percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'SubscriptionCharge',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_tax', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'Tax',
            },
        ),
        migrations.CreateModel(
            name='TaxPay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('tax_current', models.FloatField(default=0.0)),
                ('tax_paid', models.FloatField(default=0.0)),
                ('tax_remaining', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'TaxPay',
            },
        ),
        migrations.CreateModel(
            name='Total_TDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_total_tds', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Total_TDS_Pay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('tax_current', models.FloatField(default=0.0)),
                ('tax_paid', models.FloatField(default=0.0)),
                ('tax_remaining', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='TravelFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.PositiveIntegerField(default=100000)),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'TravelFund',
            },
        ),
        migrations.CreateModel(
            name='UserLeadershipBonusCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(default=10.0)),
                ('target', models.PositiveIntegerField(default=100000)),
            ],
            options={
                'db_table': 'UserLeadershipBonusCommission',
            },
        ),
        migrations.CreateModel(
            name='UserVendorCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(default=10.0)),
            ],
            options={
                'db_table': 'UserVendorCommission',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Variant',
            },
        ),
        migrations.CreateModel(
            name='Vendor_Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(default=10.0)),
            ],
        ),
        migrations.CreateModel(
            name='Yearly_PV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pv', models.FloatField(default=0.0)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Yearly PV',
            },
        ),
        migrations.CreateModel(
            name='VariantValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('value', models.CharField(max_length=50)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value', to='admin_app.variant')),
            ],
            options={
                'db_table': 'VariantValue',
            },
        ),
        migrations.CreateModel(
            name='Staffs_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile')),
                ('deparment', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staffs_usr', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_date', models.DateTimeField(auto_now=True, null=True)),
                ('anonymous', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('image', models.FileField(blank=True, null=True, upload_to='query')),
                ('reply', models.TextField(default='No-Reply')),
                ('reply_image', models.FileField(blank=True, null=True, upload_to='reply_query')),
                ('status', models.IntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Query',
            },
        ),
        migrations.CreateModel(
            name='ProductSubSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.FileField(default='products_images/banner_2_product.png', upload_to='categories')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.productsubcategory')),
            ],
            options={
                'db_table': 'ProductSubSubCategory',
            },
        ),
        migrations.CreateModel(
            name='PointValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(default=10.0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.productcategory')),
            ],
            options={
                'db_table': 'PointValue',
            },
        ),
        migrations.CreateModel(
            name='Level_Group_Level_Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configured_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('percent_per_level', models.FloatField(default=1)),
                ('no_of_levels', models.PositiveIntegerField(default=1)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.level_settings_level_plan')),
            ],
        ),
        migrations.CreateModel(
            name='Level_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configured_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('percent_per_level', models.FloatField(default=1)),
                ('no_of_levels', models.PositiveIntegerField(default=1)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.level_settings')),
            ],
            options={
                'db_table': 'Level_Group',
            },
        ),
        migrations.CreateModel(
            name='CommissionTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('transaction_type', models.CharField(max_length=20)),
                ('transaction_amount', models.FloatField()),
                ('previous_amount', models.FloatField()),
                ('remaining_amount', models.FloatField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'CommissionTransaction',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.productcategory')),
            ],
            options={
                'db_table': 'Brand',
            },
        ),
    ]
