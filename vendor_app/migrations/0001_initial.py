# Generated by Django 4.1.5 on 2023-01-26 13:22

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admin_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_balance', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'BusinessLimit',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendor_commission', models.FloatField(default=0.0)),
                ('bar_code', models.CharField(blank=True, max_length=15, null=True)),
                ('bar_code_image', models.ImageField(blank=True, null=True, upload_to='Product/BarCode_Img/')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, default=0.0, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('product_reject_reason', models.TextField(blank=True, null=True)),
                ('product_rejection', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('offer', models.BooleanField(default=False)),
                ('discount', models.PositiveIntegerField(default=0, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('special_offer_end_date', models.DateField(blank=True, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.productcategory')),
            ],
            options={
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='Product_Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.CharField(blank=True, max_length=100, null=True)),
                ('product_id', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('pruchase_price', models.CharField(blank=True, max_length=100, null=True)),
                ('mrp', models.CharField(blank=True, max_length=100, null=True)),
                ('selling_price', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('barcode', models.FileField(upload_to='product_barcode_image')),
                ('stock', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('weight', models.CharField(blank=True, max_length=100, null=True)),
                ('product_reject_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('product_rejection', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.CharField(blank=True, max_length=100, null=True)),
                ('offer', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.CharField(blank=True, max_length=100, null=True)),
                ('featured', models.CharField(blank=True, max_length=100, null=True)),
                ('special_offer', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_on', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Product Variant',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=300)),
                ('registration_number', models.CharField(max_length=50)),
                ('closing_day', models.CharField(max_length=50)),
                ('opening_time', models.CharField(max_length=50)),
                ('closing_time', models.CharField(max_length=50)),
                ('best_seller', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Store',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('gender', models.CharField(max_length=20)),
                ('store_created', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('doc_submitted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_AVPL_Vendor', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Vendor',
            },
        ),
        migrations.CreateModel(
            name='Vendor_Wallet_Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_balance', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorWithdrawRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField()),
                ('amount', models.FloatField()),
                ('is_active', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_withdraw_request', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'VendorWithdrawRequest',
            },
        ),
        migrations.CreateModel(
            name='VendorWalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('transaction_type', models.CharField(max_length=20)),
                ('transaction_amount', models.FloatField()),
                ('previous_amount', models.FloatField()),
                ('remaining_amount', models.FloatField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor_wallet_commission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.vendor_wallet_commission')),
            ],
        ),
        migrations.CreateModel(
            name='VendorDocs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_idproof', models.CharField(blank=True, max_length=20, null=True)),
                ('front_idproof', models.FileField(blank=True, null=True, upload_to='store_seller_aadhar_image')),
                ('back_idproof', models.FileField(blank=True, null=True, upload_to='store_seller_aadhar_image')),
                ('store_gst', models.CharField(blank=True, max_length=50, null=True)),
                ('store_msme', models.CharField(blank=True, max_length=50, null=True)),
                ('pancard', models.CharField(max_length=50)),
                ('pancard_image', models.FileField(upload_to='store_seller_pancard_image')),
                ('shiping_policy', models.FileField(null=True, upload_to='shiping_policy')),
                ('return_policy', models.FileField(null=True, upload_to='return_policy')),
                ('bank_account_number', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_ifsc', models.CharField(max_length=100)),
                ('bank_passbook', models.FileField(upload_to='store_bank_passbook')),
                ('razorpay_id', models.CharField(max_length=200, null=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.vendor')),
            ],
            options={
                'db_table': 'VendorDocs',
            },
        ),
        migrations.CreateModel(
            name='UserSubscriptionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField(default=1)),
                ('amount', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.vendor')),
            ],
            options={
                'db_table': 'UserSubscriptionRequest',
            },
        ),
        migrations.CreateModel(
            name='StoreImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='store_logo')),
                ('banner', models.ImageField(upload_to='store_banner')),
                ('image', models.ImageField(upload_to='store_image')),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.store')),
            ],
            options={
                'db_table': 'StoreImages',
            },
        ),
        migrations.AddField(
            model_name='store',
            name='vendor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.vendor'),
        ),
        migrations.CreateModel(
            name='Recharge_Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_date', models.DateTimeField(auto_now=True)),
                ('razorpay_order_id', models.CharField(max_length=100)),
                ('payment_id', models.CharField(blank=True, max_length=200, null=True)),
                ('amount', models.FloatField()),
                ('is_active', models.BooleanField(default=False)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.vendor')),
            ],
            options={
                'db_table': 'Recharge_Receipt',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor_app.product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.variant')),
                ('variant_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.variantvalue')),
            ],
            options={
                'db_table': 'ProductVariant',
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.FloatField()),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ProductRating',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='products_images')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor_app.product')),
            ],
            options={
                'db_table': 'ProductImages',
            },
        ),
        migrations.CreateModel(
            name='Product_Variant_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='variant_image')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor_app.product_variant')),
            ],
            options={
                'db_table': 'Product Variant Image',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor_app.store'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.productsubcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='subsubcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.productsubsubcategory'),
        ),
        migrations.CreateModel(
            name='BusinessLimitTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('transaction_name', models.CharField(max_length=100)),
                ('transaction_type', models.CharField(choices=[('CREDIT', 'CREDIT'), ('DEBIT', 'DEBIT')], max_length=20)),
                ('transaction_amount', models.FloatField()),
                ('previous_amount', models.FloatField()),
                ('remaining_amount', models.FloatField()),
                ('business_limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendor_app.businesslimit')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor_app.recharge_receipt')),
            ],
            options={
                'db_table': 'BusinessLimitTransaction',
            },
        ),
        migrations.AddField(
            model_name='businesslimit',
            name='vendor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_limit', to='vendor_app.vendor'),
        ),
    ]
